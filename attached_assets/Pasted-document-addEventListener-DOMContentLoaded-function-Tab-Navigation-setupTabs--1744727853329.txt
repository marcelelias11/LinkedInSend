document.addEventListener("DOMContentLoaded", function () {
  // Tab Navigation
  setupTabs();

  // Load saved data
  loadProfileData();
  loadSettings();
  loadApplicationHistory();

  // Setup form listeners
  setupFormListeners();

  // Setup button listeners
  setupButtonListeners();
});

// Tab Navigation
function setupTabs() {
  const tabs = document.querySelectorAll(".tab-btn");
  const tabContents = document.querySelectorAll(".tab-content");

  tabs.forEach((tab) => {
    tab.addEventListener("click", () => {
      // Remove active class from all tabs and contents
      tabs.forEach((t) => t.classList.remove("active"));
      tabContents.forEach((c) => c.classList.remove("active"));

      // Add active class to clicked tab and corresponding content
      tab.classList.add("active");
      const targetId = tab.id.replace("Tab", "Section");
      document.getElementById(targetId).classList.add("active");
    });
  });
}

// Load config data
async function loadProfileData() {
  try {
    const response = await fetch('https://' + window.location.hostname + '/api/config');
    const config = await response.json();
    
    // Display job preferences
    const jobPrefs = document.getElementById('jobPreferences');
    jobPrefs.innerHTML = `
      <p><strong>Remote:</strong> ${config.remote ? 'Yes' : 'No'}</p>
      <p><strong>Distance:</strong> ${config.distance}km</p>
      <p><strong>Positions:</strong> ${config.positions.join(', ')}</p>
    `;

    // Display experience levels
    const expLevel = document.getElementById('experienceLevel');
    expLevel.innerHTML = Object.entries(config.experienceLevel)
      .filter(([_, value]) => value)
      .map(([key, _]) => `<span class="tag">${key}</span>`)
      .join('');

    // Display job types
    const jobTypes = document.getElementById('jobTypes');
    jobTypes.innerHTML = Object.entries(config.jobTypes)
      .filter(([_, value]) => value)
      .map(([key, _]) => `<span class="tag">${key}</span>`)
      .join('');

    // Display locations
    const locations = document.getElementById('locations');
    locations.innerHTML = config.locations
      .map(loc => `<span class="tag">${loc}</span>`)
      .join('');

    // Display blacklists
    const blacklists = document.getElementById('blacklists');
    blacklists.innerHTML = `
      <p><strong>Company Blacklist:</strong> ${config.companyBlacklist?.join(', ') || 'None'}</p>
      <p><strong>Title Blacklist:</strong> ${config.titleBlacklist || 'None'}</p>
    `;
  } catch (error) {
    console.error('Error loading config:', error);
  }
      
      // Fill basic info
      document.getElementById("fullName").value = profile.fullName || "";
      document.getElementById("email").value = profile.email || "";
      document.getElementById("phone").value = profile.phone || "";
      document.getElementById("location").value = profile.location || "";
      document.getElementById("linkedin").value = profile.linkedin || "";
      document.getElementById("website").value = profile.website || "";
      document.getElementById("summary").value = profile.summary || "";
      document.getElementById("skills").value = profile.skills || "";

      // Fill work experience
      if (profile.workExperience && profile.workExperience.length > 0) {
        const workContainer = document.getElementById("workExperience");
        // Clear default entry
        workContainer.innerHTML = "";

        profile.workExperience.forEach((work) => {
          const workEntry = createWorkExperienceEntry();
          workEntry.querySelector('[name="workTitle[]"]').value =
            work.title || "";
          workEntry.querySelector('[name="workCompany[]"]').value =
            work.company || "";
          workEntry.querySelector('[name="workDuration[]"]').value =
            work.duration || "";
          workEntry.querySelector('[name="workDescription[]"]').value =
            work.description || "";
          workContainer.appendChild(workEntry);
        });
      }

      // Fill education
      if (profile.education && profile.education.length > 0) {
        const eduContainer = document.getElementById("education");
        // Clear default entry
        eduContainer.innerHTML = "";

        profile.education.forEach((edu) => {
          const eduEntry = createEducationEntry();
          eduEntry.querySelector('[name="eduDegree[]"]').value =
            edu.degree || "";
          eduEntry.querySelector('[name="eduInstitution[]"]').value =
            edu.institution || "";
          eduEntry.querySelector('[name="eduYear[]"]').value = edu.year || "";
          eduContainer.appendChild(eduEntry);
        });
      }
    }
  });
}